let API_BASE="http://localhost:5000";fetch("/config/config.json",{cache:"no-store"}).then(t=>t.ok?t.json():null).then(t=>{t?.API_BASE&&(API_BASE=t.API_BASE)}).catch(()=>{console.warn("Nie udało się wczytać config.json, używam domyślnego API_BASE:",API_BASE)});export{API_BASE};export async function api(t,n={}){const a=await fetch(`${API_BASE}${t}`,{credentials:"include",headers:{"Content-Type":"application/json"},...n});let o=null;try{o=await a.json()}catch{}if(401===a.status||403===a.status){const t=encodeURIComponent(location.pathname+location.search);throw location.pathname.endsWith("/login.html")||(location.href=`/login.html?next=${t}`),new Error(o?.message||"Wymagane zalogowanie")}if(!a.ok)throw new Error(o?.message||`Błąd ${a.status}`);return o}export async function apiWithStatus(t,n={}){const a=await fetch(`${API_BASE}${t}`,{credentials:"include",headers:{"Content-Type":"application/json"},...n});let o=null;try{o=await a.json()}catch{}return{status:a.status,ok:a.ok,data:o}}export async function getProfile(){const{status:t,data:n}=await apiWithStatus("/api/users/profile");return 200===t?n:null}
//# sourceMappingURL=api.js.map
