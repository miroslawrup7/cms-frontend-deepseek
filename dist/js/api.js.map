{"version":3,"file":"api.js","names":["API_BASE","fetch","cache","then","res","ok","json","cfg","catch","console","warn","async","api","path","options","credentials","headers","data","status","next","encodeURIComponent","location","pathname","search","endsWith","href","Error","message","apiWithStatus","getProfile"],"sources":["api.js"],"mappings":"AACA,IAAIA,SAAW,wBAEfC,MAAM,sBAAuB,CAAEC,MAAO,aACjCC,KAAKC,GAAOA,EAAIC,GAAKD,EAAIE,OAAS,MAClCH,KAAKI,IACEA,GAAKP,WAAUA,SAAWO,EAAIP,YAErCQ,MAAM,KACHC,QAAQC,KAAK,iEAAkEV,mBAG9EA,iBAGFW,eAAeC,IAAIC,EAAMC,EAAU,CAAC,GACzC,MAAMV,QAAYH,MAAM,GAAGD,WAAWa,IAAQ,CAC5CE,YAAa,UACbC,QAAS,CAAE,eAAgB,uBACxBF,IAEL,IAAIG,EAAO,KACX,IAAMA,QAAab,EAAIE,MAAO,CAAE,MAAO,CAEvC,GAAmB,MAAfF,EAAIc,QAAiC,MAAfd,EAAIc,OAAgB,CAC5C,MAAMC,EAAOC,mBAAmBC,SAASC,SAAWD,SAASE,QAK7D,MAHKF,SAASC,SAASE,SAAS,iBAC9BH,SAASI,KAAO,oBAAoBN,KAEhC,IAAIO,MAAMT,GAAMU,SAAW,uBACnC,CACA,IAAKvB,EAAIC,GACP,MAAM,IAAIqB,MAAMT,GAAMU,SAAW,QAAQvB,EAAIc,UAE/C,OAAOD,CACT,QAGON,eAAeiB,cAAcf,EAAMC,EAAU,CAAC,GACnD,MAAMV,QAAYH,MAAM,GAAGD,WAAWa,IAAQ,CAC5CE,YAAa,UACbC,QAAS,CAAE,eAAgB,uBACxBF,IAEL,IAAIG,EAAO,KACX,IAAMA,QAAab,EAAIE,MAAO,CAAE,MAAO,CACvC,MAAO,CAAEY,OAAQd,EAAIc,OAAQb,GAAID,EAAIC,GAAIY,OAC3C,QAGON,eAAekB,aACpB,MAAMX,OAAEA,EAAMD,KAAEA,SAAeW,cAAc,sBAC7C,OAAkB,MAAXV,EAAiBD,EAAO,IACjC","ignoreList":[],"sourcesContent":["// src/js/api.js\r\nlet API_BASE = \"http://localhost:5000\"\r\n\r\nfetch('/config/config.json', { cache: 'no-store' })\r\n    .then(res => res.ok ? res.json() : null)\r\n    .then(cfg => {\r\n        if (cfg?.API_BASE) API_BASE = cfg.API_BASE\r\n    })\r\n    .catch(() => {\r\n        console.warn(\"Nie udało się wczytać config.json, używam domyślnego API_BASE:\", API_BASE)\r\n    })\r\n\r\nexport { API_BASE }\r\n\r\n// ogólny helper: rzuca błędem przy !ok; przy 401/403 dodatkowo kieruje na login (z ?next=)\r\nexport async function api(path, options = {}) {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    credentials: \"include\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    ...options\r\n  })\r\n  let data = null\r\n  try { data = await res.json() } catch {}\r\n\r\n  if (res.status === 401 || res.status === 403) {\r\n    const next = encodeURIComponent(location.pathname + location.search)\r\n    // nie przekierowujemy, jeśli już jesteśmy na stronie logowania\r\n    if (!location.pathname.endsWith(\"/login.html\")) {\r\n      location.href = `/login.html?next=${next}`\r\n    }\r\n    throw new Error(data?.message || \"Wymagane zalogowanie\")\r\n  }\r\n  if (!res.ok) {\r\n    throw new Error(data?.message || `Błąd ${res.status}`)\r\n  }\r\n  return data\r\n}\r\n\r\n// wariant do świadomej obsługi statusu (np. dla 409 itp.)\r\nexport async function apiWithStatus(path, options = {}) {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    credentials: \"include\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    ...options\r\n  })\r\n  let data = null\r\n  try { data = await res.json() } catch {}\r\n  return { status: res.status, ok: res.ok, data }\r\n}\r\n\r\n// pobranie profilu; zwraca obiekt lub null\r\nexport async function getProfile() {\r\n  const { status, data } = await apiWithStatus('/api/users/profile')\r\n  return status === 200 ? data : null\r\n}\r\n"]}