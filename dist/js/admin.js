import{API_BASE}from"./api.js";import{toast,toastError,confirmToast}from"./toast.js";function escapeHTML(e){return e?e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;"):""}async function loadPendingUsers(){const e=document.getElementById("pendingTable"),t=document.getElementById("pendingBody");if(console.log("Sprawdzam DOM: pendingTable=",!!e,"pendingBody=",!!t),e&&t){t.innerHTML='<tr><td colspan="5">Ładowanie…</td></tr>';try{console.log(`Wysyłam fetch: ${API_BASE}/api/admin/pending-users`);const e=await fetch(`${API_BASE}/api/admin/pending-users`,{credentials:"include"}),t=await e.json();if(console.log("Odpowiedź z API:",t),!e.ok)throw new Error(t?.message||`Błąd ${e.status}`);renderTable(t.users||[])}catch(e){console.error("Błąd ładowania użytkowników:",e),t.innerHTML='<tr><td colspan="5" style="color:crimson">Błąd ładowania użytkowników.</td></tr>',toastError(e.message||"Nie udało się wczytać użytkowników.")}}else console.error("Brak elementów DOM: pendingTable=",e,"pendingBody=",t)}function renderTable(e){const t=document.getElementById("pendingBody");t&&(Array.isArray(e)&&0!==e.length?t.innerHTML=e.map(e=>{const t=e.createdAt?new Date(e.createdAt).toLocaleString("pl-PL",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1}).replace(",","").replace(/(\d{2})\.(\d{2})\.(\d{4})/,"$3-$2-$1"):"-";return`\n      <tr data-id="${e._id}">\n        <td>${escapeHTML(e.username)}</td>\n        <td>${escapeHTML(e.email)}</td>\n        <td>${escapeHTML(e.role)}</td>\n        \x3c!-- ZMIANA 2: Dodano kolumnę z createdAt --\x3e\n        <td>${t}</td>\n        <td>\n          <button class="btn--sm btn-approve-user">Zatwierdź</button>\n          <button class="btn--sm btn--danger btn-reject-user">Odrzuć</button>\n        </td>\n      </tr>\n    `}).join(""):t.innerHTML='<tr><td colspan="5">Brak użytkowników do wyświetlenia.</td></tr>')}document.getElementById("pendingTable")?.addEventListener("click",async e=>{const t=e.target.closest("tr[data-id]");if(!t)return;const n=t.dataset.id;if(e.target.classList.contains("btn-approve-user")){if(!await confirmToast({message:"Zatwierdzić tego użytkownika?",okText:"Zatwierdź",cancelText:"Anuluj"}))return;try{const e=await fetch(`${API_BASE}/api/admin/approve/${n}`,{method:"POST",credentials:"include"}),a=await e.json();if(!e.ok)throw new Error(a?.message||`Błąd ${e.status}`);t.remove(),toast("Użytkownik zatwierdzony.","success")}catch(e){toastError(e.message||"Błąd zatwierdzania użytkownika.")}return}if(e.target.classList.contains("btn-reject-user")){if(!await confirmToast({message:"Odrzucić tego użytkownika?",okText:"Odrzuć",cancelText:"Anuluj"}))return;try{const e=await fetch(`${API_BASE}/api/admin/reject/${n}`,{method:"DELETE",credentials:"include"}),a=await e.json();if(!e.ok)throw new Error(a?.message||`Błąd ${e.status}`);t.remove(),toast("Użytkownik odrzucony.","success")}catch(e){toastError(e.message||"Błąd odrzucania użytkownika.")}}}),document.addEventListener("DOMContentLoaded",()=>{console.log("DOMContentLoaded: Sprawdzam DOM..."),console.log("pendingTable:",document.getElementById("pendingTable")),console.log("pendingBody:",document.getElementById("pendingBody")),loadPendingUsers()});
//# sourceMappingURL=admin.js.map
