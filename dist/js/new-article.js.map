{"version":3,"file":"new-article.js","names":["getProfile","API_BASE","toast","toastError","document","addEventListener","async","me","includes","role","location","href","init","pageUrl","URL","articleId","searchParams","get","form","getElementById","titleEl","contentEl","imagesInput","preview","existingWrap","submitBtn","MAX_FILES","MAX_SIZE","hasAttribute","setAttribute","pt","textContent","loadArticleForEdit","handleFilesPreview","onSubmit","e","innerHTML","files","Array","from","target","length","value","i","f","type","startsWith","size","objUrl","createObjectURL","img","createElement","src","alt","name","appendChild","res","fetch","credentials","data","json","ok","Error","message","status","a","article","title","content","isArray","images","style","display","map","p","String","replace","join","err","preventDefault","disabled","trim","fd","FormData","append","querySelectorAll","forEach","chk","method","endpoint","body","id","_id"],"sources":["new-article.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import { getProfile, API_BASE } from './api.js'\r\nimport { toast, toastError } from './toast.js'\r\n\r\n// Guard: tylko author/admin\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  try {\r\n    const me = await getProfile()\r\n    if (!me || !['author', 'admin'].includes(me.role)) {\r\n      toastError('Brak uprawnień.')\r\n      location.href = '/'\r\n      return\r\n    }\r\n    init()\r\n  } catch {\r\n    toastError('Błąd autoryzacji.')\r\n    location.href = '/'\r\n  }\r\n})\r\n\r\nconst pageUrl = new URL(location.href)\r\nconst articleId = pageUrl.searchParams.get('id')\r\n\r\nconst form = document.getElementById('article-form')\r\nconst titleEl = document.getElementById('title')\r\nconst contentEl = document.getElementById('content')\r\nconst imagesInput = document.getElementById('images')\r\nconst preview = document.getElementById('preview')\r\nconst existingWrap = document.getElementById('existing-images')\r\nconst submitBtn = document.getElementById('submit-btn')\r\n\r\nconst MAX_FILES = 5\r\nconst MAX_SIZE = 5 * 1024 * 1024 // 5MB\r\n\r\nfunction init() {\r\n  // <form novalidate> żeby HTML nie blokował własnych komunikatów\r\n  if (form && !form.hasAttribute('novalidate')) form.setAttribute('novalidate', '')\r\n\r\n  if (articleId) {\r\n    const pt = document.getElementById('page-title')\r\n    if (pt) pt.textContent = 'Edytuj artykuł'\r\n    loadArticleForEdit()\r\n  }\r\n\r\n  if (imagesInput) imagesInput.addEventListener('change', handleFilesPreview)\r\n  if (form) form.addEventListener('submit', onSubmit)\r\n}\r\n\r\nfunction handleFilesPreview(e) {\r\n  if (preview) preview.innerHTML = ''\r\n  const files = Array.from((e && e.target && e.target.files) ? e.target.files : [])\r\n\r\n  if (files.length > MAX_FILES) {\r\n    toastError(`Maksymalnie ${MAX_FILES} plików.`)\r\n    if (imagesInput) imagesInput.value = ''\r\n    return\r\n  }\r\n\r\n  for (let i = 0; i < files.length; i++) {\r\n    const f = files[i]\r\n    if (!f.type || !f.type.startsWith('image/')) {\r\n      toastError('Dozwolone tylko obrazy.')\r\n      if (imagesInput) imagesInput.value = ''\r\n      return\r\n    }\r\n    if (f.size > MAX_SIZE) {\r\n      toastError('Każdy obraz ≤ 5MB.')\r\n      if (imagesInput) imagesInput.value = ''\r\n      return\r\n    }\r\n    const objUrl = URL.createObjectURL(f)\r\n    const img = document.createElement('img')\r\n    img.src = objUrl\r\n    img.alt = f.name\r\n    if (preview) preview.appendChild(img)\r\n  }\r\n}\r\n\r\nasync function loadArticleForEdit() {\r\n  try {\r\n    const res = await fetch(`${API_BASE}/api/articles/${articleId}`, { credentials: 'include' })\r\n    const data = await res.json()\r\n    if (!res.ok) throw new Error((data && data.message) || `Błąd ${res.status}`)\r\n\r\n    const a = data.article || data\r\n    if (titleEl) titleEl.value = a.title || ''\r\n    if (contentEl) contentEl.value = a.content || ''\r\n\r\n    if (Array.isArray(a.images) && a.images.length && existingWrap) {\r\n      existingWrap.style.display = ''\r\n      existingWrap.innerHTML = [\r\n        '<p>Istniejące obrazy (zaznacz, aby usunąć podczas zapisu):</p>',\r\n        '<div class=\"existing-grid\">',\r\n        a.images.map((p, i) => {\r\n          const src = `${API_BASE}/${String(p).replace(/^\\/+/, '')}`\r\n          return (\r\n            '<label class=\"ex-item\">' +\r\n              `<input type=\"checkbox\" name=\"removeImages\" value=\"${String(p)}\">` +\r\n              `<img src=\"${src}\" alt=\"img${i}\">` +\r\n            '</label>'\r\n          )\r\n        }).join(''),\r\n        '</div>'\r\n      ].join('')\r\n    }\r\n  } catch (err) {\r\n    toastError((err && err.message) ? err.message : 'Nie udało się wczytać artykułu do edycji.')\r\n  }\r\n}\r\n\r\nasync function onSubmit(e) {\r\n  e.preventDefault()\r\n  if (submitBtn) submitBtn.disabled = true\r\n\r\n  try {\r\n    const title = (titleEl && titleEl.value ? titleEl.value : '').trim()\r\n    const content = (contentEl && contentEl.value ? contentEl.value : '').trim()\r\n\r\n    if (title.length < 5) throw new Error('Tytuł musi mieć min. 5 znaków.')\r\n    if (content.length < 20) throw new Error('Treść musi mieć min. 20 znaków.')\r\n\r\n    const fd = new FormData()\r\n    fd.append('title', title)\r\n    fd.append('content', content)\r\n\r\n    // obrazy do usunięcia (przy edycji)\r\n    if (existingWrap) {\r\n      const checks = existingWrap.querySelectorAll('input[name=\"removeImages\"]:checked')\r\n      checks.forEach(chk => {\r\n        if (chk && chk.value != null) fd.append('removeImages', chk.value)\r\n      })\r\n    }\r\n\r\n    // nowe pliki\r\n    const files = Array.from(imagesInput && imagesInput.files ? imagesInput.files : [])\r\n    if (files.length > MAX_FILES) throw new Error(`Maksymalnie ${MAX_FILES} plików.`)\r\n    for (let i = 0; i < files.length; i++) {\r\n      const f = files[i]\r\n      if (!f.type || !f.type.startsWith('image/')) throw new Error('Dozwolone tylko obrazy (MIME).')\r\n      if (f.size > MAX_SIZE) throw new Error('Każdy obraz ≤ 5MB.')\r\n      fd.append('images', f)\r\n    }\r\n\r\n    const method = articleId ? 'PUT' : 'POST'\r\n    const endpoint = articleId\r\n      ? `${API_BASE}/api/articles/${articleId}`\r\n      : `${API_BASE}/api/articles`\r\n\r\n    const res = await fetch(endpoint, { method, credentials: 'include', body: fd })\r\n    let data = {}\r\n    try { data = await res.json() } catch {}\r\n\r\n    if (res.status === 403) throw new Error((data && data.message) || 'Brak uprawnień.')\r\n    if (!res.ok) throw new Error((data && data.message) || `Błąd ${res.status}`)\r\n\r\n    const id = (data && data.article && data.article._id) ? data.article._id : (articleId || '')\r\n    if (id) {\r\n      location.href = `/article.html?id=${id}`\r\n    } else {\r\n      location.href = '/'\r\n    }\r\n  } catch (err) {\r\n    toastError((err && err.message) ? err.message : 'Błąd zapisu.')\r\n  } finally {\r\n    if (submitBtn) submitBtn.disabled = false\r\n  }\r\n}\r\n"]}