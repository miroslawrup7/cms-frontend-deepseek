{"version":3,"file":"main.js","names":["API_BASE","limit","totalPages","currentPage","q","sort","container","document","getElementById","pageInfo","prevBtn","nextBtn","qInput","sortSel","readStateFromUrl","p","URLSearchParams","location","search","Math","max","parseInt","get","trim","value","syncUrl","set","String","newUrl","toString","history","replaceState","sessionStorage","setItem","renderArticles","list","length","innerHTML","html","map","a","href","_id","thumb","thumbnail","excerpt","content","slice","meta","likesCount","commentCount","title","join","updatePaginationUI","textContent","disabled","wrap","style","display","async","loadArticles","page","query","res","fetch","method","credentials","data","json","ok","Error","message","status","articles","total","Number","newTotalPages","ceil","err","addEventListener","qTimer","clearTimeout","setTimeout","window","e","nav","performance","getEntriesByType","persisted","type"],"sources":["main.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import { API_BASE } from './api.js'\r\nconst limit = 5\r\nlet totalPages = 1\r\n\r\nlet currentPage = 1\r\nlet q = ''\r\nlet sort = 'newest'\r\n\r\n// === Elementy DOM ===\r\nconst container = document.getElementById('articles-container')\r\nconst pageInfo  = document.getElementById('page-info')\r\nconst prevBtn   = document.getElementById('prev')\r\nconst nextBtn   = document.getElementById('next')\r\nconst qInput    = document.getElementById('q')\r\nconst sortSel   = document.getElementById('sort')\r\n\r\n// === Odczyt stanu z URL i wype≈Çnienie kontrolek ===\r\nfunction readStateFromUrl() {\r\n  const p = new URLSearchParams(location.search)\r\n  currentPage = Math.max(1, parseInt(p.get('page') || '1', 10))\r\n  q = (p.get('q') || '').trim()\r\n  sort = p.get('sort') || 'newest'\r\n  if (qInput)  qInput.value = q\r\n  if (sortSel) sortSel.value = sort\r\n}\r\n\r\n// === Zapis stanu do URL (bez prze≈Çadowania) ===\r\nfunction syncUrl() {\r\n  const p = new URLSearchParams()\r\n  if (currentPage > 1) p.set('page', String(currentPage))\r\n  if (q)               p.set('q', q)\r\n  if (sort && sort !== 'newest') p.set('sort', sort)\r\n  const newUrl = p.toString() ? `/?${p.toString()}` : '/'\r\n  history.replaceState(null, '', newUrl)\r\n\r\n  // NEW: zapamiƒôtaj ostatni adres listy (z filtrami/stronƒÖ)\r\n  try {\r\n    sessionStorage.setItem('cms:lastListURL', newUrl)\r\n  } catch {}\r\n}\r\n\r\n// === Render listy ===\r\nfunction renderArticles(list) {\r\n  if (!list || list.length === 0) {\r\n    container.innerHTML = '<p>Brak artyku≈Ç√≥w.</p>'\r\n    return\r\n  }\r\n\r\n  const html = list.map(a => {\r\n    const href = `/article.html?id=${a._id}`\r\n    const thumb = a.thumbnail ? `<img class=\"article-thumb\" src=\"${API_BASE}/${a.thumbnail}\" alt=\"\">` : ''\r\n    const excerpt = (a.content || '').slice(0, 180) + (a.content && a.content.length > 180 ? '‚Ä¶' : '')\r\n    const meta = `\r\n      <div class=\"article-meta\">\r\n        <span>üëç ${a.likesCount || 0}</span>\r\n        <span>üí¨ ${a.commentCount || 0}</span>\r\n      </div>`\r\n\r\n    return `\r\n      <article class=\"article-card\">\r\n        <a class=\"article-cover\" href=\"${href}\">${thumb}</a>\r\n        <div class=\"article-body\">\r\n          <h2 class=\"article-title\"><a href=\"${href}\">${a.title}</a></h2>\r\n          <p class=\"article-excerpt\">${excerpt}</p>\r\n          ${meta}\r\n        </div>\r\n      </article>\r\n    `\r\n  }).join('')\r\n\r\n  container.innerHTML = html\r\n}\r\n\r\n// === Paginacja UI ===\r\nfunction updatePaginationUI() {\r\n  pageInfo.textContent = `Strona ${currentPage} z ${totalPages}`\r\n  prevBtn.disabled = currentPage <= 1\r\n  nextBtn.disabled = currentPage >= totalPages\r\n\r\n  const wrap = document.getElementById('pagination')\r\n  if (wrap) wrap.style.display = totalPages > 1 ? '' : 'none'\r\n}\r\n\r\n// === Pobranie listy ===\r\nasync function loadArticles(page = 1) {\r\n  container.innerHTML = '<p>≈Åadowanie‚Ä¶</p>'\r\n  pageInfo.textContent = ''\r\n\r\n  const query = new URLSearchParams({\r\n    page: String(page),\r\n    limit: String(limit),\r\n    ...(q ? { q } : {}),\r\n    ...(sort ? { sort } : {})\r\n  })\r\n\r\n  try {\r\n    const res = await fetch(`${API_BASE}/api/articles?${query.toString()}`, {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    })\r\n    const data = await res.json()\r\n    if (!res.ok) throw new Error(data?.message || `B≈ÇƒÖd ${res.status}`)\r\n\r\n    const articles = data.articles || []\r\n    const total = Number(data.total || 0)\r\n    const newTotalPages = Math.max(1, Math.ceil(total / limit))\r\n\r\n    // --- PRZYPADKI KRAWƒòDZIOWE PO USUNIƒòCIU / FILTRACH ---\r\n\r\n    // 1) Nie ma ≈ºadnych artyku≈Ç√≥w w og√≥le (total=0)\r\n    if (total === 0) {\r\n      currentPage = 1\r\n      totalPages = 1\r\n      container.innerHTML = '<p>Brak artyku≈Ç√≥w.</p>'\r\n      updatePaginationUI()\r\n      // dopnij czysty URL (bez page), ale zachowaj q/sort\r\n      syncUrl()\r\n      return\r\n    }\r\n\r\n    // 2) Bie≈ºƒÖca strona > liczby stron (np. by≈Çe≈õ na page=2 i ostatni wpis usuniƒôto)\r\n    if (page > newTotalPages) {\r\n      currentPage = newTotalPages\r\n      totalPages = newTotalPages\r\n      // zaktualizuj URL, a potem pobierz jeszcze raz ju≈º z poprawnƒÖ stronƒÖ\r\n      syncUrl()\r\n      await loadArticles(currentPage)\r\n      return\r\n    }\r\n\r\n    // --- normalny render ---\r\n    totalPages = newTotalPages\r\n    renderArticles(articles)\r\n    updatePaginationUI()\r\n\r\n  } catch (err) {\r\n    container.innerHTML = `<p style=\"color:crimson\">${err.message || 'B≈ÇƒÖd ≈Çadowania'}</p>`\r\n    pageInfo.textContent = ''\r\n    prevBtn.disabled = true\r\n    nextBtn.disabled = true\r\n  }\r\n}\r\n\r\n\r\n// === Handlery paginacji ===\r\nprevBtn.addEventListener('click', () => {\r\n  if (currentPage > 1) {\r\n    currentPage--\r\n    syncUrl()\r\n    loadArticles(currentPage)\r\n  }\r\n})\r\nnextBtn.addEventListener('click', () => {\r\n  if (currentPage < totalPages) {\r\n    currentPage++\r\n    syncUrl()\r\n    loadArticles(currentPage)\r\n  }\r\n})\r\n\r\n// === Filtry ===\r\nlet qTimer = null\r\nqInput.addEventListener('input', () => {\r\n  q = qInput.value.trim()\r\n  if (qTimer) clearTimeout(qTimer)\r\n  qTimer = setTimeout(() => {\r\n    currentPage = 1\r\n    syncUrl()\r\n    loadArticles(currentPage)\r\n  }, 300)\r\n})\r\n\r\nsortSel.addEventListener('change', () => {\r\n  sort = sortSel.value\r\n  currentPage = 1\r\n  syncUrl()\r\n  loadArticles(currentPage)\r\n})\r\n\r\n// === Od≈õwie≈º po powrocie z historii (BFCache / back-forward) ===\r\nwindow.addEventListener('pageshow', (e) => {\r\n  // e.persisted ‚Äî safari/firefox BFCache\r\n  // performance.navigation ‚Äî wykrycie back/forward w nowoczesnych przeglƒÖdarkach\r\n  const nav = performance.getEntriesByType && performance.getEntriesByType('navigation')[0]\r\n  if (e.persisted || (nav && nav.type === 'back_forward')) {\r\n    readStateFromUrl()\r\n    loadArticles(currentPage)\r\n  }\r\n})\r\n\r\n// Fallback ‚Äî zmiana stanu historii (np. rƒôczne cofniƒôcie/naprz√≥d)\r\nwindow.addEventListener('popstate', () => {\r\n  readStateFromUrl()\r\n  loadArticles(currentPage)\r\n})\r\n\r\n// === Start ===\r\nreadStateFromUrl()\r\nsyncUrl()\r\nloadArticles(currentPage)\r\n"]}